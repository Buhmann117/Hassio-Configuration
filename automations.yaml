# BAD
  - id: "Light control ON Bad"
    alias: "Light control ON Bad"
    initial_state: 'on'
    trigger:
      platform: mqtt
      topic: "homie/5ccf7ffa70ff/light/state"
      payload: 'on'
    action:
      - service: mqtt.publish
        data:
          topic: "homie/a020a6021250/funkB/dev_1"
          payload: "on"
  - id: "Light control OFF Bad"
    alias: "Light control OFF Bad"
    initial_state: 'on'
    trigger:
      platform: mqtt
      topic: "homie/5ccf7ffa70ff/light/state"
      payload: 'off'
    action:
      - service: mqtt.publish
        data:
          topic: "homie/a020a6021250/funkB/dev_1"
          payload: "off"
      - service: media_player.turn_off
        entity_id: media_player.Disco_Dusche
      - service: switch.turn_off
        entity_id: switch.Audio_Bad


  - id: "Audio Bad ON"
    alias: "Audio Bad ON"
    initial_state: "on"
    trigger:
      platform: state
      entity_id: media_player.Disco_Dusche
      to: "playing"
    action:
      - service: switch.turn_on
        entity_id: switch.Audio_Bad
  - id: "Audio Bad OFF"
    alias: "Audio Bad OFF"
    initial_state: "on"
    trigger:
      platform: state
      entity_id: media_player.Disco_Dusche
      to: "off"
    action:
      - service: switch.turn_off
        entity_id: switch.Audio_Bad


  - id: "Disco Bad"
    alias: "Disco Bad"
    initial_state: 'off'
    trigger:
      platform: numeric_state
      entity_id: sensor.Humidity_Bad
      # Optional
      #value_template: '{{ state.attributes.battery }}'
      # At least one of the following required
      above: 40
      #below: 25
          # If given, will trigger when condition has been for X time.
          #for:
          #  hours: 1
          #  minutes: 10
          #  seconds: 5
    action:
      - service: switch.turn_on
        entity_id: switch.Audio_Bad
      - delay: 00:00:05
      - service: tts.google_say
        entity_id: media_player.Disco_Dusche
        data:
          message: 'Disco Dusche l√§uft.'
      - service: media_player.play_media
        data:
          entity_id: media_player.kodi
          media_content_id: "Skynet/Musik/02_-_Chemical_Brothers_-_Do_It_Again_(Edit)"
          media_content_type: "directory"


#  - alias: "Light control ON Schlafzimmer"
#    trigger:
#      platform: mqtt
#      topic: "homie/a020a602125/light/state"
#      payload: 'on'
#    action:
#      - service: mqtt.publish
#        data:
#          topic: "homie/a020a602125/funkS/dev_1"
#          payload: "on"
#  - alias: "Light control OFF Schlafzimmer"
#    trigger:
#      platform: mqtt
#      topic: "homie/a020a602125/light/state"
#      payload: 'off'
#    action:
#      - service: mqtt.publish
#        data:
#          topic: "homie/a020a6021250/funkS/dev_1"
#          payload: "off"

# CHAMBER
  - id: "Motion control Chamber"
    alias: "Motion control Chamber"
    trigger:
      platform: state
      entity_id: binary_sensor.Motion_Chamber
      to: 'on'
    action:
      - service: switch.turn_on
        entity_id: switch.Funk_Chamber
    #  - service: mqtt.publish
    #    data:
    #      topic: "homie/5ccf7f34095f/funkC/dev_1/set"
    #      payload: "on"

  - id: "Chamber switch off after motion"
    alias: "Chamber switch off after motion"
    trigger:
      platform: state
      entity_id: binary_sensor.Motion_Chamber
      to: 'off'
      for:
        seconds: 8
    action:
      - service: switch.turn_off
        entity_id: switch.Funk_Chamber
  #    - service: mqtt.publish
  #      data:
  #        topic: "homie/5ccf7f34095f/funkC/dev_1/set"
  #        payload: "off"

  - id: "Light control ON Chamber"
    alias: "Light control ON Chamber"
    initial_state: 'on'
    trigger:
        - platform: state
          entity_id: binary_sensor.Light_Chamber
          to: 'on'
    action:
        - service: switch.turn_on
          entity_id: switch.Funk_Chamber
  - id: "Light control OFF Chamber"
    alias: "Light control OFF Chamber"
    initial_state: 'on'
    trigger:
        - platform: state
          entity_id: binary_sensor.Light_Chamber
          to: 'off'
    action:
        - service: switch.turn_off
          entity_id: switch.Funk_Chamber

# FLUR
  - id: "Flur switch off after motion"
    alias: "Flur switch off after motion"
    trigger:
      - platform: state
        entity_id: binary_sensor.Motion_FlurFront
        to: 'off'
        for:
           seconds: 120
           #minutes: 5
      - platform: state
        entity_id: binary_sensor.Motion_FlurBack
        to: 'off'
        for:
           seconds: 120
           #minutes: 5
    condition:
      - condition: state
        entity_id: binary_sensor.Motion_FlurFront
        state: 'off'
        for:
           seconds: 120
           #minutes: 5
      - condition: state
        entity_id: binary_sensor.Motion_FlurBack
        state: 'off'
        for:
           seconds: 120
           #minutes: 5
    #  - condition: state
    #    entity_id: switch.Funk_Flur
    #    state: 'on'
    action:
    - service: switch.turn_off
      entity_id: switch.Funk_Flur

# POTT
  - id: "Light control ON Pott"
    alias: "Light control ON Pott"
    trigger:
      platform: state
      entity_id: binary_sensor.Light_Pott
      to: 'on'
    action:
      - service: mqtt.publish
        data:
          topic: "homie/a020a6021250/funkP/dev_1/set"
          payload: "on"
  - id: "Light control OFF Pott"
    alias: "Light control OFF Pott"
    trigger:
      - platform: state
        entity_id: binary_sensor.Light_Pott
        to: 'off'
    action:
      - service: mqtt.publish
        data:
          topic: "homie/a020a6021250/funkP/dev_1/set"
          payload: "off"

# Arbeitszimmer

  - id: Arbeitszimmer_heater_weekend
    alias: 'Arbeitszimmer_heater (weekend)'
    trigger:
      - platform: time
        minutes: '/1'
        seconds: 00
    condition:
      - condition: state
        entity_id: input_boolean.Arbeitszimmer_heater_weekend
        state: 'on'
      - condition: time
        weekday:
          - sat
          - sun
      - condition: template
        value_template: "{{ states.sensor.time.state == states.sensor.Arbeitszimmer_heater_time.state  }}"
    action:
      - service: climate.set_temperature
        data_template:
          entity_id: climate.Arbeitszimmer_thermostat_1
          temperature: "{{ states.input_number.Arbeitszimmer_heater_temp.state }}"
          operation_mode: Heat
      #- service: tts.google_say
      #  entity_id: media_player.Cortana
      #  data_template:
      #    message: "Heizung an."
  - id: Arbeitszimmer_heater_weekday
    alias: 'Arbeitszimmer_heater (weekday)'
    trigger:
      - platform: time
        minutes: '/1'
        seconds: 00
    condition:
      - condition: state
        entity_id: input_boolean.Arbeitszimmer_heater_weekend
        state: 'on'
      - condition: time
        weekday:
          - mon
          - tue
          - wed
          - thu
          - fri
      - condition: template
        value_template: "{{ states.sensor.time.state == states.sensor.Arbeitszimmer_heater_time.state  }}"
    action:
      - service: climate.set_temperature
        data_template:
          entity_id: climate.arbeitszimmer__thermostat_3
          temperature: "{{ states.input_number.Arbeitszimmer_heater_temp.state }}"
          operation_mode: Heat
      #- service: tts.google_say
      #  entity_id: media_player.Cortana
      #  data_template:
      #    message: "Heizung an."

#GAESTEZIMMER

  - id: Gaestezimmer_heater_weekend
    alias: 'Gaestezimmer_heater (weekend)'
    trigger:
      - platform: time
        minutes: '/1'
        seconds: 00
    condition:
      - condition: state
        entity_id: input_boolean.Gaestezimmer_heater_weekend
        state: 'on'
      - condition: time
        weekday:
          - sat
          - sun
      - condition: template
        value_template: "{{ states.sensor.time.state == states.sensor.Gaestezimmer_heater_time.state  }}"
    action:
      - service: climate.set_temperature
        data_template:
          entity_id: climate.patrick_thermostat_4
          temperature: "{{ states.input_number.Gaestezimmer_heater_temp.state }}"
          operation_mode: Heat
      #- service: tts.google_say
      #  entity_id: media_player.Cortana
      #  data_template:
      #    message: "Heizung an."
  - id: Gaestezimmer_heater_weekday
    alias: 'Gaestezimmer_heater (weekday)'
    trigger:
      - platform: time
        minutes: '/1'
        seconds: 00
    condition:
      - condition: state
        entity_id: input_boolean.Gaestezimmer_heater_weekend
        state: 'on'
      - condition: time
        weekday:
          - mon
          - tue
          - wed
          - thu
          - fri
      - condition: template
        value_template: "{{ states.sensor.time.state == states.sensor.Gaestezimmer_heater_time.state  }}"
    action:
      - service: climate.set_temperature
        data_template:
          entity_id: climate.patrick_thermostat_4
          temperature: "{{ states.input_number.Gaestezimmer_heater_temp.state }}"
          operation_mode: Heat
      #- service: tts.google_say
      #  entity_id: media_player.Cortana
      #  data_template:
      #    message: "Heizung an."


# WOHNZIMMER
  - id: "Motion Alarm"
    alias: "Motion Alarm"
    initial_state: 'off'
    trigger:
      platform: state
      entity_id: binary_sensor.Motion_Wohnzimmer
      to: "on" # Optional
    action:
      - service: tts.google_say
        entity_id: media_player.cortana
        data:
          message: 'Hab Dich!'

  - id: "Cinema Mode"
    alias: "Cinema Mode"
    trigger:
    - platform: state
      entity_id: input_boolean.cinema
      to: 'on'
    action:
    - service: scene.turn_on
      entity_id: scene.Movie
    - delay: 00:00:03
    - service: light.turn_on
      data:
        entity_id: light.Living_Room_Board
        color_name: mediumblue #hotpink
        brightness: 255

  - id: "Koelle Mode"
    alias: "Koelle Mode"
    trigger:
    - platform: state
      entity_id: input_boolean.koelle
      to: 'on'
    action:
    - service: scene.turn_on
      entity_id: scene.Movie
    - delay: 00:00:03
    - service: light.turn_on
      data:
         entity_id: light.Living_Room_Board
         color_name: red #hotpink
         brightness: 255
    - delay: 00:00:01
    - service: light.turn_on
      data:
         entity_id: light.Living_Room_NewYork
         color_name: floralwhite #hotpink
         brightness: 255
    - delay: 00:00:01
    - service: light.turn_on
      data:
         entity_id: light.Living_Room_Corner
         color_name: red #hotpink
         brightness: 255
    - delay: 00:00:01
    - service: light.turn_on
      data:
         entity_id: light.Living_Room_Couch
         color_name: floralwhite #hotpink
         brightness: 255

  - id: "Ambiente Mode ON"
    alias: "Ambiente Mode ON"
    trigger:
    - platform: state
      entity_id: input_boolean.ambiente
      to: 'on'
    action:
    - service: switch.turn_on
      entity_id: switch.Schrankwand
    - delay: 00:00:02
    - service: light.turn_on
      data:
         entity_id: light.Living_Room_Board
         color_name: yellow #hotpink
         brightness: 255
    - delay: 00:00:02
    - service: light.turn_on
      data:
         entity_id: light.Living_Room_NewYork
         color_name: yellow #hotpink
         brightness: 255
    - delay: 00:00:02
    - service: light.turn_on
      data:
         entity_id: light.Living_Room_Corner
         color_name: blue #hotpink
         brightness: 255
    - delay: 00:00:02
    - service: light.turn_on
      data:
         entity_id: light.Living_Room_Couch
         color_name: yellow #hotpink
         brightness: 255
  - id: "Ambiente Mode OFF"
    alias: "Ambiente Mode OFF"
    trigger:
    - platform: state
      entity_id: input_boolean.ambiente
      to: 'off'
    action:
    - service: switch.turn_off
      entity_id: switch.Schrankwand
    - delay: 00:00:02
    - service: light.turn_off
      data:
         entity_id: light.Living_Room_Board
    - delay: 00:00:02
    - service: light.turn_off
      data:
         entity_id: light.Living_Room_NewYork
    - delay: 00:00:02
    - service: light.turn_off
      data:
         entity_id: light.Living_Room_Corner
    - delay: 00:00:02
    - service: light.turn_off
      data:
         entity_id: light.Living_Room_Couch

  - id: "Couchbeleuchtung ON"
    alias: "Couchbeleuchtung ON"
    trigger:
    - platform: state
      entity_id: input_boolean.couchbeleuchtung
      to: 'on'
    action:
      - service: switch.turn_on
        entity_id: switch.Funk_Hauptlicht
      - delay: 00:00:03
      - service: script.turn_on
        entity_id: script.irlamp_on
  - id: "Couchbeleuchtung OFF"
    alias: "Couchbeleuchtung OFF"
    trigger:
    - platform: state
      entity_id: input_boolean.couchbeleuchtung
      to: 'off'
    action:
      - service: switch.turn_off
        entity_id: switch.Funk_Hauptlicht
      - delay: 00:00:03
      - service: script.turn_on
        entity_id: script.irlamp_off

  - id: "Entertainment ON"
    alias: "Entertainment ON"
    trigger:
    - platform: state
      entity_id: input_boolean.entertainment
      to: 'on'
    action:
      - service: switch.turn_on
        entity_id: switch.Audio_Wohnzimmer
      - delay: 00:00:03
      - service: script.turn_on
        entity_id: script.television_power
  - id: "Entertainment OFF"
    alias: "Entertainment OFF"
    trigger:
    - platform: state
      entity_id: input_boolean.entertainment
      to: 'off'
    action:
      - service: switch.turn_off
        entity_id: switch.Audio_Wohnzimmer
      - delay: 00:00:03
      - service: script.turn_on
        entity_id: script.television_power

  - id: "Kodi ON"
    alias: "Kodi ON"
    trigger:
    - platform: state
      entity_id: input_boolean.kodi
      to: 'on'
    action:
      - service: switch.turn_on
        entity_id: switch.Funk_HDD
  - id: "Kodi OFF"
    alias: "Kodi OFF"
    trigger:
    - platform: state
      entity_id: input_boolean.kodi
      to: 'off'
    action:
      - service: media_player.turn_off
        entity_id: media_player.kodi

  - id: Wohnzimmer_heater_weekend
    alias: 'Wohnzimmer_heater (weekend)'
    trigger:
      - platform: time
        minutes: '/1'
        seconds: 00
    condition:
      - condition: state
        entity_id: input_boolean.Wohnzimmer_heater_weekend
        state: 'on'
      - condition: time
        weekday:
          - sat
          - sun
      - condition: template
        value_template: "{{ states.sensor.time.state == states.sensor.Wohnzimmer_heater_time.state  }}"
    action:
      - service: climate.set_temperature
        data_template:
          entity_id: climate.wohnzimmer__thermostat_2
          temperature: "{{ states.input_number.Wohnzimmer_heater_temp.state }}"
          operation_mode: Heat
      #- service: tts.google_say
      #  entity_id: media_player.Cortana
      #  data_template:
      #    message: "Heizung an."


  - id: Wohnzimmer_heater_weekday
    alias: 'Wohnzimmer_heater (weekday)'
    trigger:
      - platform: time
        minutes: '/1'
        seconds: 00
    condition:
      - condition: state
        entity_id: input_boolean.Wohnzimmer_heater_weekend
        state: 'on'
      - condition: time
        weekday:
          - mon
          - tue
          - wed
          - thu
          - fri
      - condition: template
        value_template: "{{ states.sensor.time.state == states.sensor.Wohnzimmer_heater_time.state  }}"
    action:
      - service: climate.set_temperature
        data_template:
          entity_id: climate.wohnzimmer__thermostat_2
          temperature: "{{ states.input_number.Wohnzimmer_heater_temp.state }}"
          operation_mode: Heat
      #- service: tts.google_say
      #  entity_id: media_player.Cortana
      #  data_template:
      #    message: "Heizung an."

#Schlafzimmer

  - id: alarm_1_weekday
    alias: 'Wake me up (weekday)'
    trigger:
      - platform: time
        minutes: '/1'
        seconds: 00
    condition:
      - condition: state
        entity_id: input_boolean.alarm_1_weekday
        state: 'on'
      - condition: time
        weekday:
          - mon
          - tue
          - wed
          - thu
          - fri
      - condition: template
        value_template: "{{ states.sensor.time.state == states.sensor.alarm_1_time_minus_offset.state  }}"
    action:
      #- service: tts.google_say
      #  entity_id: media_player.Cortana
      #  data_template:
      #    message: "Alarm ! Die Zeit ist {{ states('sensor.time') }} und Alarm ist eingestellt auf {{ states('sensor.alarm_1_time') }} mit dem Offset {{ states('input_number.alarm_1_offset') }} eingestellt auf {{ states('sensor.alarm_1_time_minus_offset') }} Weekdays ({{ states('input_boolean.alarm_1_weekday') }} ) and Weekends ({{ states('input_boolean.alarm_1_weekend') }} ) test {{ '%0.02d:%0.02d' | format(states('input_number.alarm_1_hour') | int, states('input_number.alarm_1_minutes') | int) }}."
      # 18 x 1min:
      - service: light.turn_on
        data:
          entity_id: light.Yeelight_Schlafzimmer
          rgb_color: [255,91,36]
          #transition: 2000 # time in ms
          brightness: 5
      - delay: 00:01:00
      - service: light.turn_on
        data:
          entity_id: light.Yeelight_Schlafzimmer
          rgb_color: [255,91,36]
          brightness: 10
      - delay: 00:01:00
      - service: light.turn_on
        data:
          entity_id: light.Yeelight_Schlafzimmer
          rgb_color: [255,91,36]
          brightness: 15
      - delay: 00:01:00
      - service: light.turn_on
        data:
          entity_id: light.Yeelight_Schlafzimmer
          rgb_color: [255,91,36]
          brightness: 20
      - delay: 00:01:00
      - service: light.turn_on
        data:
          entity_id: light.Yeelight_Schlafzimmer
          rgb_color: [255,91,36]
          brightness: 30
      - delay: 00:01:00
      - service: light.turn_on
        data:
          entity_id: light.Yeelight_Schlafzimmer
          rgb_color: [255,91,36]
          brightness: 40
      - delay: 00:01:00
      - service: light.turn_on
        data:
          entity_id: light.Yeelight_Schlafzimmer
          rgb_color: [255,91,36]
          brightness: 50
      - delay: 00:01:00
      - service: light.turn_on
        data:
          entity_id: light.Yeelight_Schlafzimmer
          rgb_color: [255,91,36]
          brightness: 60
      - delay: 00:01:00
      - service: light.turn_on
        data:
          entity_id: light.Yeelight_Schlafzimmer
          rgb_color: [255,91,36]
          brightness: 70
      - delay: 00:01:00
      - service: light.turn_on
        data:
          entity_id: light.Yeelight_Schlafzimmer
          rgb_color: [255,91,36]
          brightness: 80
      - delay: 00:01:00
      - service: light.turn_on
        data:
          entity_id: light.Yeelight_Schlafzimmer
          rgb_color: [255,91,36]
          brightness: 90
      - delay: 00:01:00
      - service: light.turn_on
        data:
          entity_id: light.Yeelight_Schlafzimmer
          rgb_color: [255,91,36]
          brightness: 100
      - delay: 00:01:00
      - service: light.turn_on
        data:
          entity_id: light.Yeelight_Schlafzimmer
          rgb_color: [255,91,36]
          brightness: 110
      - delay: 00:01:00
      - service: light.turn_on
        data:
          entity_id: light.Yeelight_Schlafzimmer
          rgb_color: [255,91,36]
          brightness: 120
      - delay: 00:01:00
      - service: light.turn_on
        data:
          entity_id: light.Yeelight_Schlafzimmer
          rgb_color: [255,91,36]
          brightness: 140
      - delay: 00:01:00
      - service: light.turn_on
        data:
          entity_id: light.Yeelight_Schlafzimmer
          rgb_color: [255,91,36]
          brightness: 160
      - delay: 00:01:00
      - service: light.turn_on
        data:
          entity_id: light.Yeelight_Schlafzimmer
          rgb_color: [255,91,36]
          brightness: 180
      - delay: 00:01:00
      - service: light.turn_on
        data:
          entity_id: light.Yeelight_Schlafzimmer
          rgb_color: [255,91,36]
          brightness: 200
      - delay: 00:01:00
      - service: light.turn_on
        data:
          entity_id: light.Yeelight_Schlafzimmer
          rgb_color: [255,91,36]
          brightness: 220
  - id: alarm_1_weekend
    alias: 'Wake me up (weekend)'
    trigger:
      - platform: time
        minutes: '/1'
        seconds: 00
    condition:
      - condition: state
        entity_id: input_boolean.alarm_1_weekend
        state: 'on'
      - condition: time
        weekday:
          - sat
          - sun
      - condition: template
        value_template: "{{ states.sensor.time.state == states.sensor.alarm_1_time_minus_offset.state  }}"
    action:
      - service: tts.google_say
        entity_id: media_player.Cortana
        data_template:
          message: "Alarm ! Die Zeit ist {{ states('sensor.time') }} und Alarm ist eingestellt auf {{ states('sensor.alarm_1_time') }} mit dem Offset {{ states('input_number.alarm_1_offset') }} eingestellt auf {{ states('sensor.alarm_1_time_minus_offset') }} Weekdays ({{ states('input_boolean.alarm_1_weekday') }} ) and Weekends ({{ states('input_boolean.alarm_1_weekend') }} ) test {{ '%0.02d:%0.02d' | format(states('input_number.alarm_1_hour') | int, states('input_number.alarm_1_minutes') | int) }}."

  - id: Schlafzimmer_heater_weekend
    alias: 'Schlafzimmer_heater (weekend)'
    trigger:
      - platform: time
        minutes: '/1'
        seconds: 00
    condition:
      - condition: state
        entity_id: input_boolean.Schlafzimmer_heater_weekend
        state: 'on'
      - condition: time
        weekday:
          - sat
          - sun
      - condition: template
        value_template: "{{ states.sensor.time.state == states.sensor.Schlafzimmer_heater_time.state  }}"
    action:
      - service: climate.set_temperature
        data_template:
          entity_id: climate.schlafzimmer_thermostat_1
          temperature: "{{ states.input_number.Schlafzimmer_heater_temp.state }}"
          operation_mode: Heat
      #- service: tts.google_say
      #  entity_id: media_player.Cortana
      #  data_template:
      #    message: "Heizung an."
  - id: Schlafzimmer_heater_weekday
    alias: 'Schlafzimmer_heater (weekday)'
    trigger:
      - platform: time
        minutes: '/1'
        seconds: 00
    condition:
      - condition: state
        entity_id: input_boolean.Schlafzimmer_heater_weekend
        state: 'on'
      - condition: time
        weekday:
          - mon
          - tue
          - wed
          - thu
          - fri
      - condition: template
        value_template: "{{ states.sensor.time.state == states.sensor.Schlafzimmer_heater_time.state  }}"
    action:
      - service: climate.set_temperature
        data_template:
          entity_id: climate.schlafzimmer_thermostat_1
          temperature: "{{ states.input_number.Schlafzimmer_heater_temp.state }}"
          operation_mode: Heat
      #- service: tts.google_say
      #  entity_id: media_player.Cortana
      #  data_template:
      #    message: "Heizung an."

#Global
  - id: "Adios"
    alias: "Adios"
    trigger:
      platform: state
      entity_id: device_tracker.84be52018da6
      from: 'home'
      to: 'not_home'
    action:
    - service: mqtt.publish
      data:
        topic: "homie/a020a6021250/funkS/dev_1/set"
        payload: "off"
    - delay: 00:00:05
    - service: mqtt.publish
      data:
        topic: "homie/a020a6291815/funkA/dev_1/set"
        payload: "off"
    - delay: 00:00:05
    - service: climate.set_temperature
      data:
        entity_id: climate.wohnzimmer__thermostat_2
        temperature: 4.5
        operation_mode: Heat
    - delay: 00:00:05
    - service: climate.set_temperature
      data:
        entity_id: climate.arbeitszimmer__thermostat_3
        temperature: 4.5
        operation_mode: Heat
    - delay: 00:00:05
    - service: climate.set_temperature
      data:
        entity_id: climate.schlafzimmer_thermostat_1
        temperature: 4.5
        operation_mode: Heat

  - id: "Night Mode"
    alias: "Night Mode"
    trigger:
      platform: time
      # When 'at' is used, you cannot also match on hour, minute, seconds.
      # Military time format.
      at: '00:00:00'
    action:
    - service: climate.set_temperature
      data:
        entity_id: climate.wohnzimmer__thermostat_2
        temperature: 4.5
        operation_mode: Heat
    - delay: 00:00:05
    - service: climate.set_temperature
      data:
        entity_id: climate.arbeitszimmer__thermostat_3
        temperature: 4.5
        operation_mode: Heat
    - delay: 00:00:05
    - service: climate.set_temperature
      data:
        entity_id: climate.schlafzimmer_thermostat_1
        temperature: 4.5
        operation_mode: Heat

# BALKON
  - id: "Motion control Balkon"
    alias: "Motion control Balkon"
    trigger:
      - platform: state
        entity_id: binary_sensor.Motion_Balkon
        to: 'on'
    condition:
      - condition: state
        entity_id: binary_sensor.Light_Balkon
        state: 'off'
    action:
    - service: light.turn_on
      data:
        entity_id: light.Yeelight_Balkon
        #color_name: mediumblue #hotpink
        brightness: 255

  - id: "Balkon switch off after motion"
    alias: "Balkon switch off after motion"
    trigger:
      - platform: state
        entity_id: binary_sensor.Motion_Balkon
        to: 'off'
        for:
           seconds: 10
           #minutes: 5
    action:
    - service: light.turn_off
      data:
        entity_id: light.Yeelight_Balkon

  - id: "Set Radio Volume"
    alias: "Set Radio Volume"
    trigger:
      platform: state
      entity_id: input_number.volume_radio
    action:
        service: media_player.volume_set
        data_template:
          entity_id: >
            {% if is_state("input_select.chromecast_radio", "TV_Wohnzimmer") %} media_player.media_wohnzimmer
            {% elif is_state("input_select.chromecast_radio", "Sound_Wohnzimmer") %} media_player.cortana
            {% elif is_state("input_select.chromecast_radio", "Kueche") %} media_player.MoneyPenny
            {% elif is_state("input_select.chromecast_radio", "Bad") %} media_player.Disco_Dusche
            {% elif is_state("input_select.chromecast_radio", "Everywhere") %} media_player.media_wohnzimmer, media_player.cortana, media_player.MoneyPenny, media_player.Disco_Dusche
            {% endif %}
          volume_level: '{{  states.input_number.volume_radio.state  }}'





#test snippets
  #- id: "Flur switch off"
  #  alias: "Flur switch off"
  #  trigger:
  #    - platform: state
  #      entity_id: binary_sensor.Light_Flur
  #      to: 'on'
  #      for:
           #seconds: 12
  #         minutes: 2
  #  action:
  #    - service: switch.turn_off
  #      entity_id: switch.Funk_Flur

  #  - id: "Motion control Flur"
  #    alias: "Motion control Flur"
  #    trigger:
  #      - platform: state
  #        entity_id: binary_sensor.Motion_Flur1
  #        to: 'on'
        #  for:
        #    seconds: 1
  #      - platform: state
  #        entity_id: binary_sensor.Motion_Flur2
  #        to: 'on'
        #  for:
        #    seconds: 1
  #    condition:
  #      - condition: state
  #        entity_id: binary_sensor.Light_Flur
  #        state: 'off'
  #    action:
  #    - service: switch.turn_on
  #      entity_id: switch.Funk_Flur
